# IPython log file

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt 
from arpes.io import load_data
import xarray as xr
def load_csv_datatype(path_to_file: str, 
                      n_scans: int= 1,
                      energy_key: str = 'Energy(meas)',
                      dim_name: str = 'eV') -> xr.DataArray:
    """
    This function load a dataset in the csv format using pandas.
    the number of scans need to be manually insered. 
    If multiple scans are present the mean is considered 
    """

    df = pd.read_csv(path_to_file, skiprows=1, sep='\t')

    scan_list = [f'Scan{i}' for i in range(1,n_scans+1)]
    loaded_data = df[scan_list].mean(axis=1).to_numpy()
    
    #loaded_data = [df[key].to_numpy().T for key in scan_list]

    coords = {dim_name : df[energy_key].to_numpy()}

    return xr.DataArray(
        loaded_data,
        coords=coords,
        dims=dim_name,
        # attrs={...} <- attributes here
    )
data_path = 'dati/Coin_Al_50V_fullspectra.csv'

df = pd.read_csv(data_path, skiprows=1, sep='\t')
df
data_path = 'dati/Coin_Al_50V_fullspctra.csv'

df = pd.read_csv(data_path, skiprows=1, sep='\t')
df
data = load_csv_datatype(path_to_file=data_path, n_scans=1)

# Plot datas
fig, axes = plt.subplots(1, 1, figsize=(6,4))

#data.sum("eV").S.plot(ax=axes)
data.S.plot(ax=axes)

plt.tight_layout()
fermi_energy = 1477.61674 #+/- 0.50422479

df['BindingEnergy'] = fermi_energy - df['Energy(meas)']

df
df.plot('Energy(meas)', 'Sum')
plt.show()

df.plot('BindingEnergy', 'Sum')
plt.show()
